apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes' resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: spring-pet-service
spec:
  selector:
    app: pet-app
  type: LoadBalancer # type of the service. LoadBalancer indicates that our service will be external.
  ports:
    - protocol: "TCP"
      port: 8080 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
      nodePort: 30000
---
apiVersion: apps/v1
kind: Deployment # Kubernetes' resource kind we are creating
metadata:
  name: pet-app
spec:
  selector:
    matchLabels:
      app: pet-app
  replicas: 7 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: pet-app
    spec:
      containers:
        - name: pet-app
          image: leoyassuda/pet-service # Image that will be used to containers in the cluster
          imagePullPolicy: Always
          ports:
            - containerPort: 8080 # The port that the container is running on in the cluster
          env:
            - name: DB_CONNECTION_IP
              value: postgres-service
            - name: DB_CONNECTION_USERNAME
              value: doggo
            - name: DB_CONNECTION_PASSWORD
              value: roufrouf
            - name: LIQUIBASE_ENABLED
              value: "false" # Boolean to enable or disable liquibase running in the app startup
            - name: ENV
              value: dev
      initContainers:
        - name: liquibase
          image: leoyassuda/liquibase:latest
          imagePullPolicy: Always
          resources:
            limits:
              memory: "2000M"
            requests:
              memory: "200Mi"
          env:
            - name: DB_URL
              value: jdbc:postgresql://postgres-service:5432/petdb
            - name: DB_USERNAME
              value: doggo
            - name: DB_PASSWORD
              value: roufrouf
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: Endpoints
metadata:
  name: postgres-service # Service to bridge connection outside kube context and see postgres container running in separate docker
subsets:
  - addresses:
      - ip: 172.23.0.1 # Ip founded in running container postgres docker network
    ports:
      - port: 5445
      - port: 5446
